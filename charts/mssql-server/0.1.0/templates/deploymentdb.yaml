apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-dpy
  labels:
    {{- include "mssql-server.labels" . | nindent 4 }}
    app: {{ .Release.Name }}
  annotations:
    {{- include "iiidevops.annotations" . | nindent 4 }}
    iiidevops.org/type: db-server
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "mssql-server.selectorLabels" . | nindent 6 }}
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{- include "mssql-server.selectorLabels" . | nindent 8 }}
        app: {{ .Release.Name }}
      annotations:
        {{- include "iiidevops.annotations" . | nindent 8 }}
        iiidevops.org/type: db-server
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "mssql-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: mssql
              containerPort: 1433
              protocol: TCP
          # 確認MSSQL是否存活
          #livenessProbe:
          #  exec:
          #    command:
          #    - /opt/mssql-tools/bin/sqlcmd -S 127.0.0.1 -U sa -P ${SA_PASSWORD}
          #  initialDelaySeconds: 120
          #  periodSeconds: 80
          #  httpGet:
          #    path: /
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          startupProbe:
            exec:
              command:
              - sh
              - -c
              - /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${SA_PASSWORD} -Q "SELECT 1" || exit 1
            failureThreshold: 60
            periodSeconds: 5
          ## MSSQL 的安裝環境變數
          env:
          - name: ACCEPT_EULA
            value: {{ .Values.ACCEPT_EULA | quote }}
          - name: SA_PASSWORD
            value: {{ .Values.auth.saPassword | quote }}
          - name: MSSQL_PID
            value: {{ .Values.MSSQL_PID }}
          volumeMounts:
            - mountPath: /bac
              name: initdb
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      # 自動將資料庫所需匯入的表單匯入到資料庫
      initContainers:
        - name: "clone-repo-{{ .Values.git.repoName }}-{{ include "numericSafe" .Values.git.branch }}-{{ include "numericSafe" .Values.git.commitID }}"
          image: alpine/git
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
          args:
            - >-
              mkdir /tmp-project && cd /tmp-project;
              export se="//";
              export url="${git_url/$se*/$se}${git_username}:${git_token}@${git_url/*$se}";
              git clone --branch ${git_branch} ${url} . || exit 1;
              ls;
              rm -rf .git;
              mv db /initdb-data;
              chmod -R 777 /initdb-data;
          env:
            - name: git_url
              value: {{ .Values.git.url }}
            - name: git_branch
              value: {{ include "numericSafe" .Values.git.branch | quote }}
            - name: git_token
              valueFrom:
                secretKeyRef:
                  name: gitlab-bot
                  key: git-token
            # nexus username = gitlab username of BOT to clone
            - name: git_username
              valueFrom:
                secretKeyRef:
                  name: nexus-bot
                  key: username
          volumeMounts:
            - mountPath: /initdb-data
              name: initdb
      volumes:
        - name: initdb
          emptyDir: {}
