# Default values for devops-cronjob.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## devops環境使用資料
rancher:
  # 自動建置Serect資料
  # sudo docker run -it --rm curlimages/curl curl -k -u token-hd7k4:f2w2r6cn747zdlkrgwr55fdh9hwrlf2tk4hjfwglmdrsqvsssj2xf9 -X POST -H 'Accept: application/json' -H 'Content-Type: application/json' 'https://10.20.0.70/v3/catalogs/iii-dev-charts3?action=refresh'
  AccessKey: "token-thzvx"
  SecretKey: "lhv2phk852vsgh2jb2m2q8rf28pvlvhtw487tmkmkq9k6xskcx76cr"
  BearerToken: "token-thzvx:lhv2phk852vsgh2jb2m2q8rf28pvlvhtw487tmkmkq9k6xskcx76cr" 
  host: "10.20.0.73"



# 要存取鏡像的來源
harbor:
  host: "localhost:32443"

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
