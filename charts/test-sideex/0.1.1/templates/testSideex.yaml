apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-{{ .Values.pipeline.sequence }}
  annotations:
    {{- include "iiidevops.annotations" . | nindent 4 }}
spec:
  ttlSecondsAfterFinished: 0
  template:
    metadata:
      name: {{ .Release.Name }}-{{ .Values.pipeline.sequence }}
      annotations:
        {{- include "iiidevops.annotations" . | nindent 8 }}
    spec:
      containers:
        - name: test-sideex-{{ include "numericSafe" .Values.git.commitID }}-{{ .Values.pipeline.sequence }}
          image: iiiorg/sideex-runner:{{ .Values.sideex.runnerVersion }}
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'node app.js']
          env:
            - name: target_origin
              value: http://{{ .Values.web.deployName }}-svc:{{ .Values.web.port }}
            # Project name
            - name: api_origin
              valueFrom:
                secretKeyRef:
                  name: nexus
                  key: api-origin
            - name: username
              valueFrom:
                secretKeyRef:
                  name: nexus-bot
                  key: username
            - name: password
              valueFrom:
                secretKeyRef:
                  name: nexus-bot
                  key: password
            - name: project_name
              value: {{ .Values.git.repoName }}
            # Git info for nexus
            - name: git_branch
              value: {{ include "numericSafe" .Values.git.branch | quote }}
            - name: git_commit_id
              value: {{ include "numericSafe" .Values.git.commitID | quote }}
            - name: verbose
              value: "true"
          volumeMounts:
            - mountPath: /usr/src/app/repo
              name: initrepo
      initContainers:
        - name: clone-repo-{{ .Values.git.repoName }}-{{ include "numericSafe" .Values.git.branch }}-{{ include "numericSafe" .Values.git.commitID }}-{{ .Values.pipeline.sequence }}
          image: alpine/git
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'cd /init-data; git clone --branch ${git_branch} http://root:${git_token}@${git_host}/root/${git_repo}.git .; rm -rf .git; ls; chmod -R 777 /init-data']
          env:
            - name: git_host
              valueFrom:
                secretKeyRef:
                  name: gitlab
                  key: git-host
            - name: git_repo
              value: {{ .Values.git.repoName }}
            - name: git_branch
              value: {{ include "numericSafe" .Values.git.branch | quote }}
            - name: git_token
              valueFrom:
                secretKeyRef:
                  name: gitlab-bot
                  key: git-token
          volumeMounts:
            - mountPath: /init-data
              name: initrepo
      volumes:
        - name: initrepo
          emptyDir: {}
      restartPolicy: Never
  backoffLimit: 4