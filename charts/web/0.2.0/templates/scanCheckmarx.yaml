# 在部屬過程中執行checkmarx檢查，如果有要求啟用的話
# checkmarx可在任何時間點執行, 在安裝過程中執行可順便給予前端部屬的準備時間
{{ if .Values.checkmarx.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    "helm.sh/hook-delete-policy": hook-succeeded
  name: "{{ .Release.Name }}-checkmarx-runner-{{ .Values.git.commitID }}"
spec:
  ttlSecondsAfterFinished: 0
  template:
    metadata:
      name: "{{ .Release.Name }}-checkmarx-runner-{{ .Values.git.commitID }}"
    spec:
      containers:
        - name: "checkmarx-scan-{{ .Values.git.commitID }}"
          image: "{{ .Values.harbor.host }}/{{ .Values.harbor.cache }}/iiiorg/checkmarx-runner:latest"
          command: ['sh', '-c', 'cd /usr/src/app; node app.js;']
          env:
            # The CheckMarx server api base URL, including the base path "/cxresetapi"
            - name: cm_url
              valueFrom:
                secretKeyRef:
                  name: checkmarx
                  key: cm-url
            # Username of Checkmarx server
            - name: username
              valueFrom:
                secretKeyRef:
                  name: checkmarx
                  key: username
            # Password of Checkmarx server
            - name: password
              valueFrom:
                secretKeyRef:
                  name: checkmarx
                  key: password
            # Client secret of Checkmarx server
            - name: client_secret
              valueFrom:
                secretKeyRef:
                  name: checkmarx
                  key: client-secret
            # Git repo URL of the gitlab
            - name: git_url
              value: {{ .Values.git.url | quote }}
            # Indicates the tested branch name 
            - name: git_branch
              value: {{ .Values.git.branch }}
            # Indicates the tested commit
            - name: git_commit_id
              value: {{ .Values.git.commitID | quote }}
            # Origin of the API server
            - name: api_origin
              valueFrom:
                secretKeyRef:
                  name: nexus
                  key: api-origin
            # username of the API server
            - name: api_username
              valueFrom:
                secretKeyRef:
                  name: nexus
                  key: username
            # password of the API server
            - name: api_password
              valueFrom:
                secretKeyRef:
                  name: nexus
                  key: password
            # If you want detailed log
            - name: verbose
              value: "true"
          volumeMounts:
            - mountPath: /usr/src/app/repo
              name: initrepo
      # 由於checkmarx需要專案資料做Link連結, 因此此步驟會建立專案資料
      initContainers:
        - name: "clone-repo-{{ .Values.git.repoName }}-{{ .Values.git.branch }}-{{ .Values.git.commitID }}"
          image: "{{ .Values.harbor.host }}/{{ .Values.harbor.cache }}/alpine/git"
          command: ['sh', '-c', 'cd /init-data; git clone --branch ${git_branch} http://root:${git_token}@${git_host}/root/${git_repo}.git .; rm -rf .git; ls; chmod -R 777 /init-data']
          env:
            - name: git_host
              value: {{ .Values.git.host }}
            - name: git_repo
              value: {{ .Values.git.repoName }}
            - name: git_branch
              value: {{ .Values.git.branch }}
            - name: git_token
              valueFrom:
                secretKeyRef:
                  name: gitlab-token
                  key: git-token
          volumeMounts:
            - mountPath: /init-data
              name: initrepo
      # 暫時專案資料儲存區
      volumes:
        - name: initrepo
          emptyDir: {}
      restartPolicy: Never
  backoffLimit: 4  
{{- end }}