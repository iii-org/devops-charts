apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-checkmarx-{{ .Values.pipeline.sequence }}"
spec:
  ttlSecondsAfterFinished: 0
  template:
    metadata:
      name: "{{ .Release.Name }}-checkmarx-{{ .Values.pipeline.sequence }}"
      labels:
        {{- include "iiidevops.labels" . | nindent 8 }}
    spec:
      containers:
        - name: "checkmarx-scan-{{ include "numericSafe" .Values.git.commitID }}-{{ .Values.pipeline.sequence }}"
          image: "{{ .Values.harbor.host }}/{{ .Values.harbor.cache }}/iiiorg/checkmarx-runner:{{ .Values.checkmarx.runnerVersion }}"
          command: ['sh', '-c', 'cd /usr/src/app; node app.js;']
          env:
            # The CheckMarx server api base URL, including the base path "/cxresetapi"
            - name: cm_url
              valueFrom:
                secretKeyRef:
                  name: checkmarx
                  key: cm-url
            # Username of Checkmarx server
            - name: username
              valueFrom:
                secretKeyRef:
                  name: checkmarx
                  key: username
            # Password of Checkmarx server
            - name: password
              valueFrom:
                secretKeyRef:
                  name: checkmarx
                  key: password
            # Client secret of Checkmarx server
            - name: client_secret
              valueFrom:
                secretKeyRef:
                  name: checkmarx
                  key: client-secret
            # Git repo URL of the gitlab
            - name: git_url
              value: {{ .Values.git.url }}
            # Indicates the tested branch name 
            - name: git_branch
              value: {{ include "numericSafe" .Values.git.branch | quote }}
            # Indicates the tested commit
            - name: git_commit_id
              value: {{ include "numericSafe" .Values.git.commitID | quote }}
            # Origin of the API server
            - name: api_origin
              valueFrom:
                secretKeyRef:
                  name: nexus
                  key: api-origin
            # username of the API server
            - name: api_username
              valueFrom:
                secretKeyRef:
                  name: nexus-bot
                  key: username
            # password of the API server
            - name: api_password
              valueFrom:
                secretKeyRef:
                  name: nexus-bot
                  key: password
            # If you want detailed log
            - name: verbose
              value: "true"
          volumeMounts:
            - mountPath: /usr/src/app/repo
              name: initrepo
      initContainers:
        - name: "clone-repo-{{ .Values.git.repoName }}-{{ include "numericSafe" .Values.git.branch }}-{{ include "numericSafe" .Values.git.commitID }}-{{ .Values.pipeline.sequence }}"
          image: "{{ .Values.harbor.host }}/{{ .Values.harbor.cache }}/alpine/git"
          command:
            - /bin/sh
            - -c
          args:
            - >-
              cd /init-data;
              export se="//";
              export url="${git_url/$se*/$se}${git_username}:${git_token}@${git_url/*$se}";
              git clone --branch ${git_branch} ${url} .;
              rm -rf .git;
              chmod -R 777 .;
          env:
            - name: git_url
              value: {{ .Values.git.url }}
            - name: git_branch
              value: {{ include "numericSafe" .Values.git.branch | quote }}
            - name: git_token
              valueFrom:
                secretKeyRef:
                  name: gitlab-bot
                  key: git-token
            # nexus username = gitlab username of BOT to clone
            - name: git_username
              valueFrom:
                secretKeyRef:
                  name: nexus-bot
                  key: username
          volumeMounts:
            - mountPath: /init-data
              name: initrepo
      # 暫時專案資料儲存區
      volumes:
        - name: initrepo
          emptyDir: {}
      restartPolicy: Never
  backoffLimit: 4